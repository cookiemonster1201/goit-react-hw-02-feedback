{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/FeedbackForm/FeedbackForm.module.css","components/Notification/Notification.module.css","components/Container/Container.jsx","components/FeedbackForm/FeedbackForm.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","FeedbackForm","form","Section","title","section","FeedbackOptions","options","onLeaveFeedback","list","map","option","item","button","onClick","uid","Statistics","good","neutral","bad","total","positivePercentage","stats","statName","statValue","Notification","message","App","state","handleLeaveFeedback","e","statToChange","currentTarget","textContent","toLowerCase","setState","prevState","Object","values","this","reduce","value","acc","totalVotes","goodVotes","Math","round","countTotalFeedback","positiveFeedbackPercentage","countPositiveFeedbackPercentage","keys","Component","ReactDOM","render","document","querySelector","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21191849.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistics_stats__3stUL\",\"statName\":\"Statistics_statName__3sbW2\",\"statValue\":\"Statistics_statValue__XQCvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2lRUp\",\"item\":\"FeedbackOptions_item__2mlJF\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FeedbackForm_form___yZMi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","import s from 'components/Container/Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import s from 'components/FeedbackForm/FeedbackForm.module.css';\n\nexport default function FeedbackForm({ children }) {\n  return <div className={s.form}>{children}</div>;\n}\n","import PropTypes from 'prop-types';\nimport s from 'components/Section/Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      <p className={s.title}>{title}</p>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { uid } from 'uid';\nimport PropTypes from 'prop-types';\nimport s from 'components/FeedbackOptions/FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={s.list}>\n      {options.map(option => (\n        <li key={uid()} className={s.item}>\n          <button className={s.button} onClick={onLeaveFeedback}>\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from 'components/Statistics/Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className={s.stats}>\n      <p className={s.statName}>\n        Good: <span className={s.statValue}>{good}</span>\n      </p>\n      <p className={s.statName}>\n        Neutral: <span className={s.statValue}>{neutral}</span>\n      </p>\n      <p className={s.statName}>\n        Bad: <span className={s.statValue}>{bad}</span>\n      </p>\n      <p className={s.statName}>\n        Total: <span className={s.statValue}>{total}</span>\n      </p>\n      <p className={s.statName}>\n        Positive feedback:{' '}\n        <span className={s.statValue}>{positivePercentage}%</span>\n      </p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from 'components/Notification/Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.message}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { Component } from 'react';\nimport Container from 'components/Container/Container';\nimport FeedbackForm from 'components/FeedbackForm';\nimport Section from 'components/Section';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Statistics from 'components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleLeaveFeedback = e => {\n    const statToChange = e.currentTarget.textContent.toLowerCase();\n\n    this.setState(prevState => ({\n      [statToChange]: prevState[statToChange] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((value, acc) => (acc += value));\n  }\n\n  countPositiveFeedbackPercentage(totalVotes, goodVotes) {\n    return goodVotes > 0 ? Math.round((goodVotes * 100) / totalVotes) : 0;\n  }\n\n  render() {\n    const {\n      handleLeaveFeedback,\n      state: { good, neutral, bad },\n      state,\n    } = this;\n\n    const totalVotes = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage(\n      totalVotes,\n      good,\n    );\n    const options = Object.keys(state);\n\n    return (\n      <Container>\n        <FeedbackForm>\n          <Section title=\"Please leave feedback\">\n            <FeedbackOptions\n              options={options}\n              onLeaveFeedback={handleLeaveFeedback}\n            />\n          </Section>\n          {totalVotes > 0 ? (\n            <Section title=\"Statistics\">\n              <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={totalVotes}\n                positivePercentage={positiveFeedbackPercentage}\n              />\n            </Section>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </FeedbackForm>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './index.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}